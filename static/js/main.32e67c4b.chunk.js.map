{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","urlRegex","RegExp","NewMovie","state","value","valid","isUrlValid","url","match","isFieldValid","name","length","includes","capitalize","slice","toUpperCase","getErrorMessage","handleChange","e","target","setState","handleBlur","handleSubmit","preventDefault","Object","entries","data","reduce","obj","current","props","onAdd","onSubmit","this","cn","data-error","type","onChange","onBlur","placeholder","required","disabled","values","some","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"oyEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,0CCnBJK,G,MAAW,IAAIC,OAAO,wKAEfC,EAAb,4MACEC,MAAQ,CACNlB,MAAO,CACLmB,MAAO,GACPC,OAAO,GAETnB,YAAa,CACXkB,MAAO,GACPC,OAAO,GAETlB,OAAQ,CACNiB,MAAO,GACPC,OAAO,GAETjB,QAAS,CACPgB,MAAO,GACPC,OAAO,GAETN,OAAQ,CACNK,MAAO,GACPC,OAAO,IApBb,EAwBEC,WAAa,SAACC,GACZ,OAA+B,OAAxBA,EAAIC,MAAMR,IAzBrB,EA4BES,aAAe,SAACC,EAAMN,GACpB,MAAgB,gBAATM,GACgB,IAAjBN,EAAMO,UACLD,EAAKE,SAAS,QAAU,EAAKN,WAAWF,KA/BnD,EAkCES,WAAa,SAACH,GACZ,OAAOA,EAAKI,MAAM,EAAG,GAAGC,cAAgBL,EAAKI,MAAM,IAnCvD,EAsCEE,gBAAkB,SAACN,EAAMN,GACvB,OAAqB,IAAjBA,EAAMO,OACD,4BAGLD,EAAKE,SAAS,SAAW,EAAKN,WAAWF,GACpC,yBAGF,IA/CX,EAkDEa,aAAe,SAACC,GACd,MAAwBA,EAAEC,OAAlBT,EAAR,EAAQA,KAAMN,EAAd,EAAcA,MAEd,EAAKgB,SAAL,eACGV,EAAO,CACNN,QACAC,OAAO,MAxDf,EA6DEgB,WAAa,SAACH,GACZ,MAAwBA,EAAEC,OAAlBT,EAAR,EAAQA,KAAMN,EAAd,EAAcA,MAEd,EAAKgB,SAAL,eACGV,EAAO,CACNN,QACAC,MAAO,EAAKI,aAAaC,EAAMN,OAnEvC,EAwEEkB,aAAe,SAACJ,GACdA,EAAEK,iBAEF,EAAKH,UAAS,SAACjB,GACb,IAAMN,EAAQ2B,OAAOC,QAAQtB,GAC1BP,KAAI,mCAAEc,EAAF,KAAQgB,EAAR,2BACFhB,EAAOgB,EAAKtB,UAEduB,QAAO,SAACC,EAAKC,GAAN,mBAAC,eACJD,GACAC,KACD,IAIN,OAFA,EAAKC,MAAMC,MAAMlC,GAEV2B,OAAOC,QAAQtB,GACnBP,KAAI,gBAAEc,EAAF,0CACFA,EAAO,CACNN,MAAO,GACPC,OAAO,OAGVsB,QAAO,SAACC,EAAKC,GAAN,mBAAC,eACJD,GACAC,KACD,QAjGZ,4CAqGE,WAAU,IAAD,OACP,OACE,0BACExC,UAAU,eACV2C,SAAUC,KAAKX,cAEdE,OAAOC,QAAQQ,KAAK9B,OAAOP,KAAI,mCAAEc,EAAF,KAAQgB,EAAR,YAC9B,yBACE5B,IAAKY,EACLrB,UAAW6C,IAAG,sBAAuB,CACnC,gCAAiCR,EAAKrB,QAExC8B,aAAY,EAAKnB,gBAAgBN,EAAMgB,EAAKtB,QAE5C,2BACEf,UAAU,sBACV+C,KAAK,OACL1B,KAAMA,EACNN,MAAOsB,EAAKtB,MACZiC,SAAU,EAAKpB,aACfqB,OAAQ,EAAKjB,WACbkB,YAAa,EAAK1B,WAAWH,GAC7B8B,SAAmB,gBAAT9B,QAKhB,yBAAKrB,UAAU,uBACb,4BACE+C,KAAK,SACL/C,UAAU,uBACV2C,SAAUC,KAAKX,aACfmB,SAAUjB,OAAOkB,OAAOT,KAAK9B,OAAOwC,MAAK,SAAAvC,GAAK,OAAKA,EAAMC,UAJ3D,mBAjIV,GAA8BuC,a,QCHjBC,EAAb,4MACE1C,MAAQ,CACNR,OAAQmD,GAFZ,EAKEC,SAAW,SAAClD,GACV,EAAKuB,UAAS,SAAAjB,GAAK,MAAK,CACtBR,OAAO,GAAD,mBACDQ,EAAMR,QADL,CAEJE,SATR,4CAcE,WACE,IAAQF,EAAWsC,KAAK9B,MAAhBR,OAER,OACE,yBAAKN,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAYM,OAAQA,KAEtB,yBAAKN,UAAU,WACb,kBAAC,EAAD,CACE0C,MAAOE,KAAKc,iBAxBxB,GAAyBH,aCDzBI,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.32e67c4b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport './NewMovie.scss';\n\n// eslint-disable-next-line\nconst urlRegex = new RegExp(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/g);\n\nexport class NewMovie extends Component {\n  state = {\n    title: {\n      value: '',\n      valid: true,\n    },\n    description: {\n      value: '',\n      valid: true,\n    },\n    imgUrl: {\n      value: '',\n      valid: true,\n    },\n    imdbUrl: {\n      value: '',\n      valid: true,\n    },\n    imdbId: {\n      value: '',\n      valid: true,\n    },\n  };\n\n  isUrlValid = (url) => {\n    return url.match(urlRegex) !== null;\n  };\n\n  isFieldValid = (name, value) => {\n    return name === 'description'\n      || (value.length !== 0\n      && (!name.includes('Url') || this.isUrlValid(value)));\n  };\n\n  capitalize = (name) => {\n    return name.slice(0, 1).toUpperCase() + name.slice(1);\n  }\n\n  getErrorMessage = (name, value) => {\n    if (value.length === 0) {\n      return 'Please fill in this field';\n    }\n\n    if (name.includes('Url') && !this.isUrlValid(value)) {\n      return 'Please enter valid URL';\n    }\n\n    return '';\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: {\n        value,\n        valid: true,\n      },\n    });\n  };\n\n  handleBlur = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: {\n        value,\n        valid: this.isFieldValid(name, value),\n      },\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.setState((state) => {\n      const movie = Object.entries(state)\n        .map(([name, data]) => ({\n          [name]: data.value,\n        }))\n        .reduce((obj, current) => ({\n          ...obj,\n          ...current,\n        }), {});\n\n      this.props.onAdd(movie);\n\n      return Object.entries(state)\n        .map(([name]) => ({\n          [name]: {\n            value: '',\n            valid: true,\n          },\n        }))\n        .reduce((obj, current) => ({\n          ...obj,\n          ...current,\n        }), {});\n    });\n  };\n\n  render() {\n    return (\n      <form\n        className=\"NewMovieForm\"\n        onSubmit={this.handleSubmit}\n      >\n        {Object.entries(this.state).map(([name, data]) => (\n          <div\n            key={name}\n            className={cn('NewMovieForm__field', {\n              'NewMovieForm__field--invalid': !data.valid,\n            })}\n            data-error={this.getErrorMessage(name, data.value)}\n          >\n            <input\n              className=\"NewMovieForm__input\"\n              type=\"text\"\n              name={name}\n              value={data.value}\n              onChange={this.handleChange}\n              onBlur={this.handleBlur}\n              placeholder={this.capitalize(name)}\n              required={name !== 'description'}\n            />\n          </div>\n        ))}\n\n        <div className=\"NewMovieForm__field\">\n          <button\n            type=\"submit\"\n            className=\"NewMovieForm__button\"\n            onSubmit={this.handleSubmit}\n            disabled={Object.values(this.state).some(value => !value.valid)}\n          >\n            Add Movie\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [\n        ...state.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie\n            onAdd={this.addMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}